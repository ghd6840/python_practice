#튜플의 특징 
# - 시퀀스 자료형
# - 수정,추가,삭제가 불가능한 리스트
# - 메모리 사용이 효율적
# - 읽기만 가능하기 떄문에 데이터 손실 염려가 없다

#튜플만들기
#튜플 = (데이터,데이터,데이터) or 튜플 = 데이터, 데이터, 데이터
#데이터의 타입은 같을 필요는 없다.
#a = (30,40,50), a = "hello",40,5, a = (30,)

#튜플을 리스트로 만들기
# 1. a tuple([5,6,7]) => (5,6,7)
# 2. x = list(range(10)) [0,1,2,3,4,5,6,7,8,9], a = tuple(x) (0,1,2,3,4,5,6,7,8,9)
# 3. x = 5,6,7 , a = list(x) [5,6,7]

#패킹과 언패킹
#numbers = 3,4,5 # 패킹
#a,b,c = numbers # 언패킹
#numbers = [3,4,5] #패킹
#a,b,c = numbers #언패킹  * a,b = b,a  (C에선 temp로 옮기기)

#튜플 함수
a = 10,20,30,40,30
#1. 특정값의 인덱스 구하기 
a.index(20)
#2. 특정값의 개수
a.count(30)
#3. 최대값, 최소값
max(a), min(a)
#4. 합계
sum(a)
